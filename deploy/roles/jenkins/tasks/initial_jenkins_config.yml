---

- name: Load encrypted default admin password
  include_vars: "default_admin_password.yml"

#this assumes that the `init.groovy.d` directory has been previously created
- name: Update the initialize groovy and copy it to the target directory
  become: true
  template: 
    src: "initial_security.j2"
    dest: "{{ jenkins_home_dir }}/init.groovy.d/000-initial_security.groovy"
    force: yes
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: u=rw,g=r,o=r   

- name: "get DNS name for {{ terraform_dns_reference }} "
  command: "terraform output -state=../terraform/terraform.tfstate {{ terraform_dns_reference }}"
  delegate_to: localhost
  register: full_dns_name

- name: "Update the set URL groovy ({{ full_dns_name.stdout }}) and copy it to the target directory"
  become: true
  template: 
    src: "set_url.j2"
    dest: "{{ jenkins_home_dir }}/init.groovy.d/002-set_url.groovy"
    force: yes
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: u=rw,g=r,o=r   

- name: "Copy the JNLP port setting init groovy script"
  become: true
  copy: 
    src: "set-JNLP-port.groovy"
    dest: "{{ jenkins_home_dir }}/init.groovy.d/003-set-JNLP-port.groovy"
    force: yes
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: u=rw,g=r,o=r   

- name: "Create init script to configure the SSHD port"
  become: true
  template: 
    src: "configure_sshd.j2"
    dest: "{{ jenkins_home_dir }}/init.groovy.d/004-configure_sshd.groovy"
    force: yes
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: u=rw,g=r,o=r  

# Done under the user that performs the remote command (ea. ubuntu)
- name: "Generate Jenkins CfgMgt SSH key"
  command : 'ssh-keygen -q -b 2048 -t rsa -f {{ jenkins_cfgmgt_ssh_key }} -C "" -N ""'
  args:
    creates: "{{ jenkins_cfgmgt_ssh_key }}"

- name: Get the Jenkins CfgMgt SSH public key.
  shell: "cat {{ jenkins_cfgmgt_ssh_key }}.pub"
  register: CfgMgt_pub_key

- name: Display the public key we just loaded
  debug:
    msg: "{{ CfgMgt_pub_key.stdout }}"

# - name: register the Jenkins SSH server public key in the known_hosts file
#   shell: "ssh-keyscan -t rsa,dsa -p 50001 localhost > ~/.ssh/known_hosts"

#ssh -i .ssh/jenkins_cfgMgr_key -l jenkins_cfg -p 50001 localhost help
