---

# java -jar jenkins-cli.jar install-plugin SOURCE ... [-deploy] [-name VAL] [-restart]
# Installs a plugin either from a file, an URL, or from update center.
#  SOURCE    : If this points to a local file (‘-remoting’ mode only), that file
#              will be installed. If this is an URL, Jenkins downloads the URL
#              and installs that as a plugin. If it is the string ‘=’, the file
#              will be read from standard input of the command, and ‘-name’ must
#              be specified. Otherwise the name is assumed to be the short name
#              of the plugin in the existing update center (like ‘findbugs’), and
#              the plugin will be installed from the update center.
#  -deploy   : Deploy plugins right away without postponing them until the reboot.
#  -name VAL : If specified, the plugin will be installed as this short name
#              (whereas normally the name is inferred from the source name
#              automatically).
#  -restart  : Restart Jenkins upon successful installation.


# java -jar jenkins-cli.jar list-plugins [NAME]
# Outputs a list of installed plugins.
#  NAME : Name of a specific plugin
 
# java -jar jenkins-cli.jar list-plugins-v2 [NAME] [--output VAL]
# List plugins either in plain text or JSON format
#  NAME         : Name of a specific plugin
#  --output VAL : Available output formats: json or text


  - name: Install plugins
    shell: "{{ CLI_command }} install-plugin {{item}} -deploy"
    loop: "{{ default_plugins }}"

  

# java -jar jenkins-cli.jar groovy [SCRIPT] [ARGUMENTS ...]
# Executes the specified Groovy script.
#  SCRIPT    : Script to be executed. File, URL or '=' to represent stdin.
#  ARGUMENTS : Command line arguments to pass into script.

  # - name: Obtaining a list of plugins
  #   jenkins_script:
  #     script: 'println(Jenkins.instance.pluginManager.plugins)'
  #     url: "http://localhost:{{ used_port }}"
  #     user: "admin"
  #     password: '{{ jenkins_default_admin_password }}'
  #   register: output
    
  # - debug: 
  #     var: output.output

  # - name: Make sure the plugin is always up-to-date
  #   jenkins_plugin:
  #     name: cloudbees-ssh-slaves
  #     state: latest
  #     url_username: "admin"
  #     url_password: '{{ jenkins_default_admin_password }}'
  #     url: "http://localhost:{{ used_port }}"