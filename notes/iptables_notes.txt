iptables -t nat -L -n -v
iptables --table nat --flush
ifconfig -s -a

iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8888
iptables -t nat -I OUTPUT -p tcp -d 127.0.0.1 --dport 80 -j REDIRECT --to-ports 8888
iptables -t nat -I OUTPUT -p tcp -d 0.0.0.0/0 --dport 80 -j REDIRECT --to-ports 8888

#Requests from outside
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8888
#Requests from localhost
iptables -t nat -I OUTPUT -p tcp -d 0.0.0.0/0 --dport 80 -j REDIRECT --to-ports 8888


#We do not specify the controler (wildcard) as the name is not stable on EC2
- name: redirect the traffic from 80 to {{ used_port }} with IPtables
  become: yes
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    match: tcp
    destination_port: "80"
    jump: REDIRECT
    to_ports: "{{ used_port }}"
    #comment: "Redirect web traffic to port {{ used_port }}"

- name: Second part of the redirection from 80 to {{ used_port }}
  become: yes
  iptables:
    table: nat
    chain: OUTPUT
    protocol: tcp
    match: tcp
    destination: "0.0.0.0/0"
    destination_port: "80"
    jump: REDIRECT
    to_ports: "{{ used_port }}"